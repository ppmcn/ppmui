/* ======  column  ====== */

$column :(2 1)(3 2 1)(4 3 2 1)(5 4 3 2 1)(6 5 4 3 2 1);
$column-width: 100%;
$column-blank: 1.2%;

.column{
  width: $column-width;
  margin:0 auto;
}

.column:after {clear:both; content:"."; display:block; font-size:0; height:0; line-height:0;  min-height:0; visibility:hidden; *zoom:1;}

.column [class*=col-]{
  margin-left: $column-blank;
  float: left;
}

.column [class*=col-]:first-child
{
  margin-left: 0;
}


@each $x,$y in $column{
  @for $i from 1 through $y{
    .column .col-#{$x}-#{$i}{
      width: (
        ( ( $column-width - $column-blank * ($x - 1) ) / $x ) * $i + $column-blank * ($i - 1) - 0.07%
      )
    }
  }
}

// @each $x,$y in (3,3),(2,1){
//   .column .col-$(x)-$(y){
//     width: calc( ((var(--width) - $column-blank*($(x)-1) ) / $(x)) * $(y) + $column-blank*($(y)-1) );
//   }
// }

// @each $x,$y in (4,4,4),(3,2,1){
//   .column .col-$(x)-$(y){
//     width: calc( ((var(--width) - $column-blank*($(x)-1) ) / $(x)) * $(y) + $column-blank*($(y)-1) );
//   }
// }

// @each $x,$y in (5,5,5,5),(4,3,2,1){
//   .column .col-$(x)-$(y){
//     width: calc( ((var(--width) - $column-blank*($(x)-1) ) / $(x)) * $(y) + $column-blank*($(y)-1) );
//   }
// }



// /*兼容*/
// @each $x,$y in (2),(1){
//   .ie6 .column .col-$(x)-$(y){
//      margin-left: expression(this.previousSibling==null?'0':'$column-blank');
//     float: left;
//   }
// }

// @each $x,$y in (3,3),(2,1){
//   .ie6 .column .col-$(x)-$(y){
//      margin-left: expression(this.previousSibling==null?'0':'$column-blank');
//     float: left;
//   }
// }

// @each $x,$y in (4,4,4),(3,2,1){
//   .ie6 .column .col-$(x)-$(y){
//      margin-left: expression(this.previousSibling==null?'0':'$column-blank');
//     float: left;
//   }
// }

// @each $x,$y in (5,5,5,5),(4,3,2,1){
//   .ie6 .column .col-$(x)-$(y){
//     margin-left: expression(this.className.indexOf('col-')>=0&&this.previousSibling==null?'0':'$column-blank');
//     float: left;
//   }
// }